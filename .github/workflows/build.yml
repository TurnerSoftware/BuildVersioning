name: Build

on:
  push:
    branches: [ main ]
  pull_request: 
  release:
    types: [ published ]

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  BUILD_ARTIFACT_PATH: ${{github.workspace}}/build-artifacts

jobs:
  build:
    name: Build ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Test with Coverage
      run: dotnet test --logger trx --results-directory ${{env.BUILD_ARTIFACT_PATH}}/coverage --collect "XPlat Code Coverage" --settings CodeCoverage.runsettings /p:SkipBuildVersioning=true
    - name: Pack
      run: dotnet pack -c Release --no-build /p:PackageOutputPath=${{env.BUILD_ARTIFACT_PATH}}
    - name: Publish artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.os}}
        path: ${{env.BUILD_ARTIFACT_PATH}}

  coverage:
    name: Process code coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download coverage reports
      uses: actions/download-artifact@v2
    - name: Install ReportGenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
    - name: Prepare coverage reports
      run: reportgenerator -reports:*/coverage/*/coverage.cobertura.xml -targetdir:./ -reporttypes:Cobertura
    - name: Upload coverage report
      uses: codecov/codecov-action@v1.2.2
      with:
        file: Cobertura.xml
        fail_ci_if_error: false
    - name: Save combined coverage report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: Cobertura.xml
      
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
    - name: Download build
      uses: actions/download-artifact@v2
    - run: ls /ubuntu-latest
    # TODO: Upload to NuGet & GitHub Packages